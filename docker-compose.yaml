services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"   # HTTP порт для входящих запросов
      - "8080:8080"   # Панель мониторинга Traefik
    command:
      - "--api.insecure=true"   # Включение панели мониторинга (уберите в продакшене!)
      - "--providers.docker=true"   # Подключение к Docker как провайдеру
      - "--providers.docker.exposedbydefault=false"   # Не экспортировать сервисы по умолчанию
      - "--entrypoints.web.address=:80"   # Настройка entrypoint для HTTP
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock   # Для доступа к Docker API
    networks:
      - app-network

  composition-service:
    build:
      context: ./composition
      dockerfile: Dockerfile
    image: composition_image
    environment:
      - SCORE_SERVICE_HOST=score-service
      - SCORE_SERVICE_PORT=8081 # для http
      - AUTH_SERVICE_HOST=auth-service
      - AUTH_SERVICE_PORT=8080 # для http
    labels:
      - "traefik.enable=true"   # Включение сервиса в Traefik
      - "traefik.http.routers.composition.entrypoints=web"   # Используем entrypoint web
      - "traefik.http.routers.composition.rule=Host(`localhost`) && PathPrefix(`/composition`)"   # Правило маршрутизации
      - "traefik.http.services.composition.loadbalancer.server.port=8082"   # Внутренний порт приложения
    depends_on:
      - score-service
      - auth-service
    networks:
      - app-network

  score-service:
    build:
      context: ./score
      dockerfile: Dockerfile
    image: score_image
    container_name: score-service
    environment:
      - SPRING_DATASOURCE_HOST=postgres-score
      - SPRING_DATASOURCE_PORT=5432
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    depends_on:
      - postgres-score
    networks:
      - app-network

  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    image: auth_image
    container_name: auth-service
    environment:
      - SPRING_DATASOURCE_HOST=postgres-auth
      - SPRING_DATASOURCE_PORT=5432
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    depends_on:
      - postgres-auth
    networks:
      - app-network

  postgres-score:
    image: postgres:17
    container_name: postgres-score
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: score_db
    volumes:
      - postgres_score_data:/var/lib/postgresql/data
    networks:
      - app-network

  postgres-auth:
    image: postgres:17
    container_name: postgres-auth
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auth_db
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_score_data:
  postgres_auth_data:
